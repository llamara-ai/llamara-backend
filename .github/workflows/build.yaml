name: CI Build

on:
  # Build main container:
  workflow_call:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths-ignore: ["**/*.md"]
    # Build release container:
    tags:
      - "v*.*"
      - "v*.*.*"
  # Dry run for PRs:
  pull_request:
    branches: ["main"]
    paths-ignore: ["**/*.md"]

permissions:
  contents: write

jobs:
  maven:
    name: Maven Build

    runs-on: "ubuntu-24.04"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: llamara-ai/llamara-backend

      - name: Download frontend build
        if: github.repository == 'llamara-ai/llamara-distro'
        uses: actions/download-artifact@v4
        with:
          name: vite-dist
          path: src/main/resources/META-INF/resources

      - name: Maven Build
        uses: ./.github/actions/maven-build
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Upload the full dependency graph to improve quality of Dependabot alerts except on PR
      - name: Update dependency graph
        if: github.repository == 'llamara-ai/llamara-backend' && github.event_name != 'pull_request'
        uses: advanced-security/maven-dependency-submission-action@v4

      - name: Upload packaged application
        uses: actions/upload-artifact@v4
        with:
          name: quarkus-app
          path: |
            target/quarkus-app

      - name: Upload OpenAPI schema
        uses: actions/upload-artifact@v4
        with:
          name: openapi-schema
          path: |
            target/openapi

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            target/jacoco-report

      - name: Trigger distro build
        if: github.repository == 'llamara-ai/llamara-backend' && github.event_name != 'pull_request' && github.ref_name == 'main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISTRO_DISPATCH_BUILD_TOKEN }}
          repository: llamara-ai/llamara-distro
          event-type: build

  docker:
    name: Docker Build & Publish
    needs: maven

    runs-on: "ubuntu-24.04"

    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: llamara-ai/llamara-backend

      - name: Get Build Date
        id: date
        run: echo "date=$(date +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Get Project Version
        id: version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: "v2.2.4"

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download packaged application
        uses: actions/download-artifact@v4
        with:
          name: quarkus-app
          path: target/quarkus-app

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: src/main/docker/Dockerfile.jvm
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            LLAMARA_VERSION=${{ steps.version.outputs.version }}

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
